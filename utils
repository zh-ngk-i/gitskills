package org;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.nio.ByteBuffer;import java.nio.channels.FileChannel;public class XMCP { public final static String NN = "2.class"; static String srcpath = "H:\\abc1235677d77d7ddd"; static String destpath ="D:\\mofangwas\\xxx01\\xxx02\\xxxxxxxxxx03\\xxxxxxxxx04\\xxxxxxxx05\\xxxxxxxx06\\xxxxxxxx07\\xxxxxxx08\\xjwjIPDzggceshiyuan\\abc1235677d77d7ddd"; public static void main(String[] args) {  if(args!=null&&args.length>0){   srcpath= args[0];   destpath = args[1];  }  getFile(srcpath); } public static void getFile(String path){  File srcroot = new File(path);  for(File fs:srcroot.listFiles()){   if(fs.isDirectory()){    getFile(fs.getAbsolutePath());   }else{    String onefilepath = fs.getPath();    String temppath = destpath+onefilepath.substring(onefilepath.indexOf("abc1235677d77d7ddd")+18, onefilepath.length());    System.out.println(temppath);    String destparent = temppath.substring(0,temppath.lastIndexOf("\\"));    //记录文件名称    String realname = fs.getName();    File srcfile = new File(temppath);     if(srcfile.exists()){      srcfile.delete();     }    if(temppath.length()>=255){       //修改     //System.out.println("修改前文件名称是："+fs.getName());       String rootPath = fs.getParent();       File gmfile = new File(rootPath + File.separator +NN);       System.out.println("修改后文件名称是："+gmfile.getName());       if (fs.renameTo(gmfile))        {        System.out.println("修改成功!");       }        try {                int bytesum = 0;                int byteread = 0;               File f2 = new File(destparent+File.separator +gmfile.getName());           /*    if (gmfile.exists()) { //文件存在时                    InputStream inStream = new FileInputStream(gmfile.getAbsoluteFile()); //读入原文件                    FileOutputStream fss = new FileOutputStream(destparent+File.separator +gmfile.getName());                    byte[] buffer = new byte[1444];                    while ( (byteread = inStream.read(buffer)) != -1) {                        bytesum += byteread; //字节数 文件大小                        System.out.println(bytesum);                        fss.write(buffer, 0, byteread);                      }                    inStream.close();                }*/                copyUseChannel(gmfile,f2);               File destfs = new File (destparent+File.separator+NN);           }            catch (Exception e) {                System.out.println("复制单个文件操作出错");                e.printStackTrace();            }            gmfile.delete();           //把文件名改过来           File destfs = new File (destparent+File.separator+NN);        File destgmfile = new File(destparent+File.separator +realname);        if(!destgmfile.exists()){         try {       destgmfile.createNewFile();      } catch (IOException e) {       // TODO Auto-generated catch block       e.printStackTrace();      }        }        try {      copyUseChannel(destfs,destgmfile);     } catch (IOException e) {      // TODO Auto-generated catch block      e.printStackTrace();     }       File abc = new File (destparent+File.separator+NN);       abc.delete();        System.out.println(destfs.getAbsolutePath());    }else{       String rootPath = fs.getParent();       System.out.println("根路径是："+rootPath);       try {                int bytesum = 0;                int byteread = 0;                    InputStream inStream = new FileInputStream(fs.getAbsoluteFile()); //读入原文件                    FileOutputStream fss = new FileOutputStream(destparent+File.separator +fs.getName());                       byte[] buffer = new byte[1444];                      while ( (byteread = inStream.read(buffer)) != -1) {                        bytesum += byteread; //字节数 文件大小                        fss.write(buffer, 0, byteread);                      }                    inStream.close();            }            catch (Exception e) {                System.out.println("复制单个文件操作出错");                e.printStackTrace();            }     }   }  } } public static void copyUseChannel(File srcFile, File destFile) throws IOException {  if ((!srcFile.exists()) || (srcFile.isDirectory())) {  return;  }  FileChannel out = null;  FileChannel in = null;  try {  out = new FileOutputStream(destFile).getChannel();  in = new FileInputStream(srcFile).getChannel();  ByteBuffer buffer = ByteBuffer.allocate(102400);  int position = 0;  int length = 0;  while (true) {  length = in.read(buffer, position);  if (length <= 0) {  break;  }  buffer.flip();  out.write(buffer, position);  position += length;  buffer.clear();  }  } finally {  if (out != null) {  out.close();  }  if (in != null) {  in.close();  }  }  srcFile.deleteOnExit();  //srcFile.d } }
